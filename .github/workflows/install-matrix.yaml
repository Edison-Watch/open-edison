name: Install matrix (macOS/Linux)

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches:
      - '**'
    paths-ignore:
      - '.github/workflows/**'
  workflow_dispatch:

jobs:
  uvx-macos:
    name: direct uvx (macOS)
    runs-on: macos-14
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Open Edison
        uses: ./.github/actions/setup
      - name: direct uvx smoke (PyPI)
        run: |
          uvx open-edison --help

  curl-installer-ubuntu:
    name: curl|bash installer (Ubuntu)
    runs-on: ubuntu-24.04
    steps:
      - name: Curl installer smoke
        shell: bash
        run: |
          set -euxo pipefail
          curl -fsSL https://raw.githubusercontent.com/Edison-Watch/open-edison/main/curl_pipe_bash.sh | bash -s -- -h

  curl-installer-macos:
    name: curl|bash installer (macOS)
    runs-on: macos-14
    steps:
      - name: Curl installer smoke
        shell: bash
        run: |
          set -euxo pipefail
          curl -fsSL https://raw.githubusercontent.com/Edison-Watch/open-edison/main/curl_pipe_bash.sh | bash -s -- -h

  clone-make-run-ubuntu:
    name: clone & make run (Ubuntu)
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Open Edison
        uses: ./.github/actions/setup
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
      - name: make setup
        run: make setup
      - name: Start server
        run: |
          set -euxo pipefail
          make run &
          echo $! > server.pid
          # wait for port 3001 to be up
          for i in {1..60}; do
            if curl -sf http://localhost:3001/health >/dev/null; then
              echo "server healthy"; break; fi; sleep 1; done
      - name: Health check
        run: curl -sf http://localhost:3001/health | tee /dev/stderr
      - name: Stop server
        if: always()
        run: |
          if [ -f server.pid ]; then kill $(cat server.pid) || true; fi

  docker-run-ubuntu:
    name: clone & docker_run (Ubuntu)
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build image
        run: docker build -t open-edison:ci .
      - name: Run container
        run: |
          docker run -d --name edison-ci -e OPEN_EDISON_CONFIG_DIR=/app -p 3001:3001 -v ${{ github.workspace }}/config.json:/app/config.json open-edison:ci
          for i in {1..60}; do if curl -sf http://localhost:3001/health >/dev/null; then echo ok; break; fi; sleep 1; done
      - name: Health check
        run: curl -sf http://localhost:3001/health | tee /dev/stderr
      - name: Cleanup
        if: always()
        run: |
          docker logs edison-ci || true
          docker rm -f edison-ci || true

  docker-run-macos:
    name: clone & docker_run (macOS, experimental)
    runs-on: macos-14
    continue-on-error: true
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install colima and docker (experimental)
        run: |
          brew update
          brew install colima docker
          colima start --cpu 2 --memory 4 --disk 10
      - name: Build image
        run: docker build -t open-edison:ci .
      - name: Run container
        run: |
          docker run -d --name edison-ci -e OPEN_EDISON_CONFIG_DIR=/app -p 3001:3001 -v ${{ github.workspace }}/config.json:/app/config.json open-edison:ci || true
          for i in {1..60}; do if curl -sf http://localhost:3001/health >/dev/null; then echo ok; break; fi; sleep 1; done
      - name: Health check
        run: |
          curl -sf http://localhost:3001/health | tee /dev/stderr || true
      - name: Cleanup
        if: always()
        run: |
          docker logs edison-ci || true
          docker rm -f edison-ci || true
          colima stop || true


